[General]
include scenarios.ini                   # definition of scenarios / examples
    
#-----------------------Debug Output Switches-----------------------#
#**.macDebug = false    # either use ** form or the long form if you want to enable it for specific nodes only
*.*.application.appDebug = true
*.*.NIC.MAC.IEEE802154Mac.macDebug = true
*.*.NIC.PHY.phyDebug = true
*.*.NIC.radioInterface.radioDebug = true

check-signals = true
debug-on-errors = true


#----------------------Result Output Switches-----------------------#
record-eventlog = false
**.scalar-recording = false
**.vector-recording = false



#----------------------Random Options / Switches--------------------#
rng-class="cLCG32"      # which RNG type should be used 
num-rngs=1              # number of RNGs to create
#seed-0-lcg32 = 1234567  # switch around this seed if u want different startup behaviours
#*.*.application.rng-0 = 0   # specify which #RNG is used per node / module


#------------------------------Mobility-----------------------------#
#*.*.mobilityType = "StationaryMobility"   #   different settings defined per scenario / example
*.*.mobilityType = "SupervisedMobility"    #   different settings defined per scenario / example

*.*.mobility.constraintAreaMinX = 0m
*.*.mobility.constraintAreaMinY = 0m
*.*.mobility.constraintAreaMinZ = 0m
*.*.mobility.constraintAreaMaxX = (1m/0)   # positiv infinity
*.*.mobility.constraintAreaMaxY = (1m/0)   # positiv infinity
*.*.mobility.constraintAreaMaxZ = (1m/0)   # positiv infinity

**.initFromDisplayString = false                            # "true" for fixed automatic node positions, 
                                                            #"false" for manual placement (cp. scenarios.ini) 


#-----------------------------APP Layer-----------------------------#
#
# Application specific parameters can be found in the scenarios.ini file
#

*.AccessPoint.application.isAP = true # important for positioning
*.AccessPoint.application.appStartTime = 1s #uniform(9s, 12s)        # set this past the mac start time

#---------------------APP Layer (MAC settings)----------------------#
#  Applications Layer also includes nessesary settings to communicate
#  with the MAC Layer directly. These settings were part of LLC Layer
#  previously. But for this usecase they are located in the Application
#
#--------------------------------------------------------------------#
*.*.application.PollFrequency = 0.5
*.*.application.TXoption = 0 				  # see Box.ned. TXoptions as descibed in IEEE standard (Std 802.15.4-2006 page 69) 
#-----------  Variables for PAN startup-------------------------------
#
# all values are used to generate inforamtion to store in msgs sent by 
# the application. Some of them may change due to a beacon notify
*.*.application.PANId = 007                  #
*.*.application.LogicalChannel = 0			 # 868MHz -> 1 channel: channel nr. 0
*.*.application.ChannelPage = 0			     # channel page = freq+modulation -> 0: BPSK, 1: ASK, 2 QPSK
*.*.application.protokollStartTime = 0       # NOT USED in Box.cc ?!!  we want other receivers to receive the first beacon while scanning
*.*.application.BeaconOrder = 15			 # to calculate Beaconintervall 0-14, 15: no beacons
*.*.application.SuperframeOrder = 15         # to calculate active portion  0-14
*.*.application.BatteryLifeExtension = false #
*.*.application.CoordRealignment = false     #
#-----------  Variables for initial Channel Scan
*.*.application.ScanChannels = 1             # 27 bit choose each bit for the channel to be scanned - whereas 1=scan and 0=don't scan -> convert your 27bits into an integer value
*.*.application.ScanDuration = 1.5             # [aBaseSuperframeDuration * (2^n + 1)] this is n so - value is Symbols
*.*.application.ScanPage = 0                 # see channel page
*.*.application.ScanType = 1                 # always should choose 1 for initial active scan. 0: ED scan, 1: active scan, 2: passive scan, 3: orphan scan


#--------------------Medium Access Control Layer--------------------#
*.AccessPoint.NIC.MAC.IEEE802154Mac.isPANCoordinator = true
# some settings have to be set twice (in addition to app-layer) here 
# they are used to perform the actual funktionality
*.*.NIC.MAC.IEEE802154Mac.BeaconOrder = 15              # value (0..15), default 15 = beacon disabled 
*.*.NIC.MAC.IEEE802154Mac.SuperframeOrder = 15          # value (0..15), default 15 = superframe/beacons disabled
*.*.NIC.MAC.IEEE802154Mac.panCoordinatorName = "Coordinator-Box" # NOT USED !!??! choose your name
*.*.NIC.MAC.IEEE802154Mac.ackForGts = false            # NOT USED !!??!
*.*.NIC.MAC.IEEE802154Mac.startWithoutStartReq = true # if false: wait for MLME-START primitive from upper layer.
                                                                        #   Set this to true if you want that the MAC to start up 
                                                                        #   the PAN in Beacon-enabled without the Start primitive.
                                                                        #   then also set 'isPANCoordinator'.
                                                                        #   BO, SO channel and coordinator will be ignored if false
*.*.NIC.MAC.IEEE802154Mac.gtsPayload = 10              # NOT USED !!??!
*.*.NIC.MAC.IEEE802154Mac.defChann = 25                # MAC needs to know init channel for backoff calculation
*.*.NIC.MAC.IEEE802154Mac.isRecvGts = true             # ???
*.*.NIC.MAC.IEEE802154Mac.isFFD = true                 # RFDs don't react on Associate request, won't be Coordinator and don't do orph scan

*.*.NIC.MAC.IEEE802154Mac.macAddr = "auto"             # uncomment in case you want to set MAC addresses manually
#*.*.NIC.MAC.IEEE802154Mac.macAddr = "0A:00:1F:EA:12:00:00:20"


#--------------------Radio & PHY-PIB--------------------#
*.*.NIC.radioInterface.carrierFrequency = 868MHz        # NOT USED!!?! instead there is a table with exact center frequencies
*.*.NIC.radioInterface.transmitterPower = 10mW          # check that channelControl.pMax is set accordingly
*.*.NIC.radioInterface.sensitivity = -80dBm             # check that channelControl.sat is set accordingly!!! received signals with power below sensitivity are ignored
*.*.NIC.radioInterface.bitrate= 20kbps
*.*.NIC.radioInterface.radioModel = "GenericRadioModel"
*.*.NIC.radioInterface.channelNumber = 0               # channel identifier this radio listens. Also important for center freq
# values for PYH-PAN information base  ---> ???
# wird das nicht vom MAC-Layer Ã¼ber nachrichten an PHY gesetzt ??!!
*.*.NIC.PHY.transmitPower = 10                         # ??? for PHY-PAN information base EINHEIT UNKLAR
*.*.NIC.PHY.symbolsPerOctet = 40                       # Number of symbols to identify 1 octet of data
*.*.NIC.PHY.channelsSupported = "2046,2147485694,1073743870"  #possible channels to be used ?????
*.*.NIC.PHY.currentChannel = 0                         # ??? for PHY-PAN information base EINHEIT UNKLAR
*.*.NIC.PHY.currentPage = 0                            # ??? for PHY-PAN information base EINHEIT UNKLAR
*.*.NIC.PHY.CCAMode = 1                                # 3 possible CCA Modes as described in the 2006 revision of the standard
*.*.NIC.PHY.SHRDuration = 5                            # duration of the sync header


#--------------------Power Consumption--------------------#
*.*.NIC.radioInterface.usage_IEEE802154Radio_idle = 2mA   # -1 to disable battery registration
*.*.NIC.radioInterface.usage_IEEE802154Radio_recv = 23.5mA
*.*.NIC.radioInterface.usage_IEEE802154Radio_send = 36mA
*.*.NIC.radioInterface.usage_IEEE802154Radio_sleep = 0mA
*.*.batteryType = "InetSimpleBattery"
*.*.battery.capacity = 3800        # mAh
*.*.battery.voltage = 3.3          # V
*.*.battery.publishTime = 1000s    # for fireBatteryCangeNotification (interval to check)
*.*.battery.publishDelta = 0.3     # for fireBatteryCangeNotification (% of discharge to chek bevor Notification)
*.*.battery.resolution = 100s      # for auto-update if there is no state-change for a long time
*.*.battery.ConsumedVector = true  # record vector for both consumed and residual energy

#--------------------Channel Control Parameters--------------------#
*.channelControl.carrierFrequency = 868MHz         # e.g. 2475 MHz for Channel 25 --> F = 2405 + 5 * (k -11) for K = 11, 12, ... , 26 (channel number)
*.channelControl.pMax = 10mW                        # 26 ~14dBm used for initial interfDistance !!!
*.channelControl.sat = -80dBm                       # signal attenuation threshold (in dBm) -> = sensitivity of hosts used for interfDist calculation
*.channelControl.alpha = 2                          # path loss coefficient
*.channelControl.numChannels = 27                   # number of radio channels (frequencies) -> 27 channels for IEEE 802.15.4
